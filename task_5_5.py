# 5. Подумайте, как можно сделать оптимизацию кода по памяти, по скорости.
# Представлен список чисел. Определить элементы списка, не имеющие повторений. Сформировать из этих элементов
# список с сохранением порядка их следования в исходном списке, например:
# src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# result = [23, 1, 3, 10, 4, 11]
# Подсказка: напишите сначала решение «в лоб». Потом подумайте об оптимизации.

src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
result = [sr for sr in src if src.count(sr) == 1]
print(result)  # Решение «в лоб»

unique = set()
tmp = set()
for el in src:
    if el not in tmp:
        unique.add(el)
    else:
        unique.discard(el)
    tmp.add(el)
print(unique)    # Решение с применением множества

unique_ord = [el for el in src if el in unique]
print(unique_ord)  # список с сохранением порядка их следования в исходном списке
